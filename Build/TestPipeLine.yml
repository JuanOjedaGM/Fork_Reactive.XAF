trigger: none
jobs:
- job: BuildArtifacts
  timeoutInMinutes: 70
  strategy:
    parallel: 1
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: self
    - task: DownloadBuildArtifacts@0
      displayName: Download Bin
      inputs:
        buildType: 'specific'
        project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
        definition:  '23'
        buildVersionToDownload: 'specific'
        buildId: $(DxPipelineBuildId)
        artifactName: 'bin'
        downloadType: single
        downloadPath: '$(System.DefaultWorkingDirectory)'
    # - task: DownloadBuildArtifacts@0
    #   displayName: Download EasyTests
    #   inputs:
    #     buildType: 'specific'
    #     project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
    #     definition:  '23'
    #     buildVersionToDownload: specific
    #     buildId: $(DxPipelineBuildId)
    #     artifactName: 'Tests'
    #     downloadType: single
    #     downloadPath: '$(System.DefaultWorkingDirectory)\bin'
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: 'Visual Studio Enterprise(b48a609a-17f6-4e48-a317-54ab77fbf822)'
        ScriptType: 'InlineScript'
        Inline: |
          $a = @{
            Sourcepath = '$(System.DefaultWorkingDirectory)'
            AzureToken ='$(AzureToken)'
            AzureApplicationId='$(AzureApplicationId)'
            AzureTenantId='$(AzureTenantId)'
            XpandBlobOwnerSecret='$(XpandBlobOwnerSecret)'
            AzStorageLookup=('$(AzStorageLookup)' -eq "1")
          }
          $a|write-output
          & '$(System.DefaultWorkingDirectory)/build/TestPipeline.ps1' @a
        azurePowerShellVersion: 'LatestVersion'
  
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'bin'
        publishLocation: 'pipeline'
- job: ALLWinTests
  timeoutInMinutes: 70
  dependsOn: 'BuildArtifacts'
  strategy:
    parallel: 10
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: self
    - task: DownloadPipelineArtifact@2
      enabled: true
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      enabled: true
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'ALL.Win.Tests'
      enabled: true
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\Xpand.XAF.Modules.ViewWizard.Tests.dll
          **\Xpand.XAF.Modules.Reactive.Tests.dll
          **\Xpand.XAF.Modules.HideToolBar.Tests.dll
          **\Xpand.XAF.Modules.MasterDetail.Tests.dll
          **\Xpand.XAF.Modules.OneView.Tests.dll
          **\Xpand.XAF.Modules.PositionInListView.Tests.dll
          **\Xpand.XAF.Modules.RefreshView.Tests.dll
          **\Xpand.XAF.Modules.SuppressConfirmation.Tests.dll
          **\Xpand.XAF.Modules.ViewEditMode.Tests.dll
          **\Xpand.XAF.Modules.SequenceGenerator.Tests.dll
          **\ALL.Win.Tests.dll
          !**\obj\**    
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnAssembly
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
- job: TestPerAssembly
  timeoutInMinutes: 70
  dependsOn: 'ALLWinTests'
  strategy:
    parallel: 10
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnExecutionTime
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
        testAssemblyVer2: |
          **\Xpand.XAF.Modules.AutoCommit.Tests.dll
          **\Xpand.XAF.Modules.CloneMemberValue.Tests.dll
          **\Xpand.XAF.Modules.ViewItemValue.Tests.dll
          **\Xpand.XAF.Modules.GridListEditor.Tests.dll
          **\Xpand.XAF.Modules.LookupCascade.Tests.dll
          **\Xpand.XAF.Modules.ProgressBarViewItem.Tests.dll
          **\Xpand.Extensions.Tests.dll
          **\Xpand.XAF.Modules.CloneModelView.Tests.dll
          **\Xpand.XAF.Modules.ModelViewInheritance.Tests.dll
          **\Xpand.XAF.Modules.Office.Cloud.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**    
- job: TestPerAssembly2
  timeoutInMinutes: 70
  dependsOn: 'TestPerAssembly'
  strategy:
    parallel: 4
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnAssembly
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
        testAssemblyVer2: |
          **\ALL.Win.Tests.NetCore.dll
          **\Xpand.XAF.Modules.Reactive.Logger.Hub.Tests.dll
          **\Xpand.XAF.Modules.Reactive.Logger.Tests.dll
          **\Xpand.XAF.Modules.Office.DocumentStyleManager.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**    
- job: GoogleCloudOffice
  timeoutInMinutes: 70
  dependsOn: 'TestPerAssembly'
  strategy:
    parallel: 1
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnAssembly
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
        testAssemblyVer2: |
          **\Xpand.XAF.Modules.Office.Cloud.Google.Calendar.Tests.dll
          **\Xpand.XAF.Modules.Office.Cloud.Google.Tasks.Tests.dll
          **\Xpand.XAF.Modules.Office.Cloud.Google.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**    
- job: MicrosoftCloudOffice
  timeoutInMinutes: 70
  dependsOn: 'TestPerAssembly'
  strategy:
    parallel: 1
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnAssembly
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
        testAssemblyVer2: |
          **\Xpand.XAF.Modules.Office.Cloud.Microsoft.Calendar.Tests.dll
          **\Xpand.XAF.Modules.Office.Cloud.Microsoft.Todo.Tests.dll
          **\Xpand.XAF.Modules.Office.Cloud.Microsoft.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**    
- job: TestPerExecutionTime
  timeoutInMinutes: 70
  dependsOn: 
    - GoogleCloudOffice
    - MicrosoftCloudOffice
    - TestPerAssembly2
  strategy:
    parallel: 10
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'bin'
        targetPath: '$(Pipeline.Workspace)'
    - task: PowerShell@2
      displayName: Download Cloud creds
      inputs: 
        pwsh: true
        targetType: inline
        script: |
          $VerbosePreference="Continue"
          $ErrorView="NormalView"
          & '$(System.DefaultWorkingDirectory)/build/DownloadCloudCreds.ps1' '$(GitHubToken)'
    - task: VSTest@2
      displayName: 'Tests'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\ALL.Web.Tests.dll
          **\*ModelMapper*Tests.dll
          !**\obj\**    
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnExecutionTime
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
- job: CheckTests
  dependsOn: TestPerExecutionTime
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
    - checkout: self
    - task: PowerShell@2
      displayName: 'CheckTest'
      inputs:
        pwsh: true
        targetType: inline
        script: |
          if (('$(AzStorageLookup)' -eq "1")){
              throw "Start full build with AzStorageLookup"
          }
          & '$(System.DefaultWorkingDirectory)\build\check-tests.ps1' '$(System.DefaultWorkingDirectory)' '$(AzureToken)' '$(DxApiFeed)' '$(Build.BuildNumber)' '$(DxPipelineBuildId)'
          

