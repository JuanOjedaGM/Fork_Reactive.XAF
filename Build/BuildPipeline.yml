variables:
    - group: keys
    - name: NUGET_PACKAGES
      value: $(Pipeline.Workspace)\.nuget\packages
trigger: none 
jobs:
- job: BuildModules
  strategy: 
    parallel: 1
  pool:
    vmImage: windows-2022
  variables:
    - group: keys
  steps:
    - checkout: self
    # - task: CacheBeta@0
    #   inputs:
    #     key: 'nuget | "$(CustomVersion)" | paket.lock'
    #     restoreKeys: |
    #       nuget | "$(CustomVersion)"
    #     path: $(NUGET_PACKAGES)
    #   displayName: Cache NuGet packages
    - task: AzurePowerShell@5
      condition: eq(variables['UseLastVersion'], '')
      name: Build
      inputs:
        errorActionPreference: stop
        azureSubscription: 'Visual Studio Enterprise(b48a609a-17f6-4e48-a317-54ab77fbf822)'
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |
          $ErrorView="NormalView"
          "Nugetpackage=$env:Nuget_PACKAGES"
          $ErrorActionPreference="stop"
          $goArgs = @{
              GithubToken              = '$(GitHubToken)'
              AzureToken               = '$(AzureToken)' 
              GitHubUserName           = '$(GitHubUserName)' 
              DXApiFeed                = '$(DXApiFeed)'
              Branch                   = '$(Build.SourceBranchName)'
              SourcePath               = '$(System.DefaultworkingDirectory)'
              ArtifactStagingDirectory = '$(Build.Artifactstagingdirectory)'
              BinDirectory             = '$(System.DefaultworkingDirectory)\bin'
              CustomVersion            = '$(CustomVersion)'
              UseLastVersion           = '$(UseLastVersion)'
              XpandBlobOwnerSecret     = '$(XpandBlobOwnerSecret)'
              AzureApplicationId       = '$(AzureApplicationId)'
              AzureTenantId            = '$(AzureTenantId)'
          }
          "goArgs:"
          $goArgs | Out-String
          $env:AzureToken=$AzureToken
          $env:AzOrganization="eXpandDevops"
          $env:AzProject ="eXpandFramework"
          & '$(System.DefaultWorkingDirectory)\Build\BuildPipeline.ps1' @goArgs
    - task: DotNetCoreCLI@2
      displayName: 'AutoCommit'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.AutoCommit.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'BulkObjectUpdate'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.BulkObjectUpdate.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'CloneMemberValue'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.CloneMemberValue.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'CloneModelView'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.CloneModelView.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Email'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Email.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Test: Xpand.Extensions'
      inputs:
        command: 'test'
        projects: '**/Xpand.Extensions.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'GridListEditor'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.GridListEditor.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'HideToolBar'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.HideToolBar.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'JobScheduler.Hangfire'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.JobScheduler.Hangfire.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'JobScheduler.Notification'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.JobScheduler.Notification.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'MasterDetail'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.MasterDetail.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'ModelMapper'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.ModelMapper.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'ModelViewInheritance'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.ModelViewInheritance.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Office.Cloud'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Office.Cloud.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Office.Cloud.Google'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Office.Cloud.Google.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Office.Cloud.Google.Calendar'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Office.Cloud.Google.Calendar.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Office.Cloud.Google.Tasks'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Office.Cloud.Google.Tasks.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Office.DocumentStyleManager'
      inputs:
        command: 'test'
        projects: '**/Xpand.XAF.Modules.Office.DocumentStyleManager.Tests.csproj'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $ErrorView="NormalView"
          $ErrorActionPreference="stop"
          $env:AzureToken='$(AzureToken)'
          $env:AzProject="eXpandFramework"
          $env:AzOrganization="eXpandDevOps"
          & '$(System.DefaultWorkingDirectory)\go.ps1' -InstallModules
          $xafMinors=Get-XAFLatestMinors -Source '$(DXApiFeed)'
          $xafMinor=$xafMinors|select-object -first 1
          $parameters = @{
            CustomVersion     = "$xafminor"
            DxPipelineBuildId = '$(Build.BuildId)'
          }
          $parameters
          Add-AzBuild -Definition PublishNugets-Reactive.XAF -Parameters $parameters -Branch $env:Build_SourceBranchName
          Write-Host "Hello World"
        failOnStderr: true
        ignoreLASTEXITCODE: true
        pwsh: true
    - task: PublishPipelineArtifact@1
      name: PublishNugets
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\bin\Nupkg'
        artifact: 'Nupkg'
        publishLocation: 'pipeline'
    - task: PublishPipelineArtifact@1
      name: PublishZips
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\bin\zip'
        artifact: 'Zip'
        publishLocation: 'pipeline'
    
    
    
    
