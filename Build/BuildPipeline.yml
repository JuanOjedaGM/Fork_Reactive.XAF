variables:
  NUGET_PACKAGES: $(Pipeline.Workspace)\.nuget\packages

trigger: none 
jobs:
- job: BuildModules
  strategy: 
    parallel: 1
  pool:
    vmImage: windows-2019
  variables:
    - group: keys
  steps:
  - checkout: self
  - task: PowerShell@2
    displayName: Build
    inputs:
      targetType: inline
      script: |
        $VerbosePreference="Continue"
        $ErrorView="NormalView"
        "Nugetpackage=$env:Nuget_PACKAGES"
        $goArgs = @{
            GithubToken ='$(GitHubToken)'
            AzureToken ='$(AzureToken)' 
            GitHubUserName ='$(GitHubUserName)' 
            DXApiFeed ='$(DXApiFeed)'
            Branch                   = '$(Build.SourceBranchName)'
            SourcePath               = '$(System.DefaultworkingDirectory)'
            ArtifactStagingDirectory = '$(Build.Artifactstagingdirectory)'
            BinDirectory             = '$(System.DefaultworkingDirectory)\bin'
            CustomVersion            = '$(CustomVersion)'
        }
        "goArgs:"
        $goArgs | Out-String
        
        & '$(System.DefaultWorkingDirectory)\Build\BuildPipeline.ps1' @goArgs
      pwsh: true
      errorActionPreference: continue
      failOnStderr: false
      ignoreLASTEXITCODE: true
  - task: PowerShell@2
    displayName: 'Stage files' 
    inputs:
      pwsh: true
      targetType: inline
      script: |
        $VerbosePreference="Continue"
        $ErrorView="NormalView"
        $SourcePath='$(System.DefaultworkingDirectory)'
        
        Set-Location $SourcePath
        $stage = "$Sourcepath\buildstage"
        New-Item $stage -ItemType Directory -Force
        Get-ChildItem $stage -Recurse | Remove-Item -Recurse -Force
        New-Item $stage\source -ItemType Directory -Force
        Set-Location $stage
        New-Item "$stage\TestApplication" -ItemType Directory
        Write-Host "Copying Bin" 
        Move-Item "$Sourcepath\Bin" "$stage\Bin" -Force
        
        
        Write-Host "Moving TestWinApplication" 
        Move-Item "$stage\Bin\TestWinApplication" "$stage\TestApplication" -Force 
        Write-Host "Moving TestWebApplication" 
        Move-Item "$stage\Bin\TestWebApplication" "$stage\TestApplication" -Force 
        Write-Host "Moving AllTestsWin" 
        Move-Item "$stage\Bin\AllTestWeb" "$stage\TestApplication" -Force 
        Write-Host "Moving AllTestsWeb" 
        Move-Item "$stage\Bin\AllTestWin" "$stage\TestApplication" -Force 
        Remove-Item "$stage\bin\ReactiveLoggerClient" -Recurse -Force
        
        
    
        "Web","Win"|ForEach-Object{
            Write-HostFormatted "Zipping DX $_" -ForegroundColor Magenta
            $webassemblies=((Get-ChildItem "$stage\TestApplication\AllTest$_" DevExpress*.dll -Recurse)+(Get-ChildItem ("$stage\TestApplication\Test$_","Application" -join "") DevExpress*.dll -Recurse))
            New-Item $stage\DX$_ -ItemType Directory -Force
            $webassemblies|Move-Item -Destination $stage\DX$_ -Force
            Compress-Files $stage\DX$_ $stage\DX$_.Zip -compressionLevel NoCompression 
            Remove-Item $stage\DX$_ -Force -Recurse
            Get-ChildItem "$stage\bin" DevExpress*.dll|Remove-Item
            New-Item $stage\DX -ItemType Directory -Force
            Move-Item $stage\DX$_.Zip $stage\DX
        }
        
        Write-HostFormatted "FINISH" -Section
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: UnitTests'
    inputs:
      Parallel: true
      PathtoPublish: '$(System.DefaultworkingDirectory)\buildstage\bin'
      ArtifactName: 'Bin'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: XafApplication'
    inputs:
      Parallel: true
      PathtoPublish: '$(System.DefaultworkingDirectory)\buildstage\TestApplication'
      ArtifactName: 'Tests'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: DX'
    inputs:
      Parallel: true
      PathtoPublish: '$(System.DefaultworkingDirectory)\buildstage\DX'
      ArtifactName: 'Tests'
  - task: PowerShell@2
    displayName: 'Start Tesing' 
    inputs:
      pwsh: true
      targetType: inline
      script: |
        & '$(System.DefaultWorkingDirectory)\go.ps1' -InstallModules
        $env:AzDevopsToken='$(AzureToken)'
        $env:AzOrganization="eXpandDevOps"
        $env:AzProject ="eXpandFramework"
        $env:DXFeed='$(DXApiFeed)'
        $dxversion=Get-XAFLatestMinors|select-object -first 1
        if ($env:build_buildnumber -like "*$dxversion*"){
            $parameters = @{
                DxPipelineBuildId = $env:Build_BuildId
            }
            Add-AzBuild -Definition DevExpress.XAF-Lab-Tests -Parameters $parameters -Branch '$(Build.SourceBranchName)' -Tag $dxVersion
        }
  
        
  
  